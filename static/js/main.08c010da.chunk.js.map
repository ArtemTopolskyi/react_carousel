{"version":3,"sources":["components/Carousel/Carousel.js","App.js","index.js"],"names":["Carousel","state","currentPosition","scrollLeft","props","itemWidth","step","setState","prevState","expectedPosition","scrollRight","images","frameSize","maxAllowableShift","length","this","animationDuration","className","style","width","transform","transition","map","image","index","key","src","alt","type","onClick","React","Component","App","ReactDOM","render","document","getElementById"],"mappings":"kOAKaA,G,YAAb,4MACEC,MAAQ,CACNC,gBAAiB,GAFrB,EAKEC,WAAa,WAAO,IAAD,EACW,EAAKC,MAAzBC,EADS,EACTA,UAAWC,EADF,EACEA,KAEnB,EAAKC,UAAS,SAACC,GACb,IAEMC,EAFeD,EAAUN,gBAGdG,EAAYC,EAO7B,MAAO,CAAEJ,gBAJeO,EAAmB,EACvC,EACAA,OAjBV,EAuBEC,YAAc,WAAO,IAAD,EAC6B,EAAKN,MAA5CC,EADU,EACVA,UAAWC,EADD,EACCA,KAAMK,EADP,EACOA,OAAQC,EADf,EACeA,UAEjC,EAAKL,UAAS,SAACC,GACb,IAEMC,EAFeD,EAAUN,gBAGdG,EAAYC,EAEvBO,GACFR,EAAYM,EAAOG,OAAUT,EAAYO,EAO7C,MAAO,CAAEV,gBAJeO,EAAmBI,EACvCA,EACAJ,OAtCV,4CA4CE,WAAU,IAAD,EAMHM,KAAKX,MAJPC,EAFK,EAELA,UACAM,EAHK,EAGLA,OACAC,EAJK,EAILA,UACAI,EALK,EAKLA,kBAGF,OACE,yBACEC,UAAU,WACVC,MAAO,CAAEC,MAAM,GAAD,OAAKd,EAAYO,EAAjB,QAEd,wBACEK,UAAU,iBACVC,MAAO,CACLE,UAAU,cAAD,OAAgBL,KAAKd,MAAMC,gBAA3B,OACTmB,WAAW,aAAD,OAAeL,EAAf,QAIVL,EAAOW,KAAI,SAACC,EAAOC,GAAR,OACT,wBACEP,UAAU,iBACVQ,IAAKF,EACLL,MAAO,CAAEC,MAAM,GAAD,OAAKd,EAAL,QAEd,yBACEqB,IAAKH,EACLI,IAAG,wBAAmBH,UAOhC,yBAAKP,UAAU,8BACb,4BAAQW,KAAK,SAASC,QAASd,KAAKZ,YAApC,QACA,4BAAQyB,KAAK,SAASC,QAASd,KAAKL,aAApC,cAlFV,GAA8BoB,IAAMC,YCqCrBC,E,4MApCb/B,MAAQ,CACNU,OAAQ,CACN,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,iB,4CAIJ,WAAU,IACAA,EAAWI,KAAKd,MAAhBU,OAER,OACE,yBAAKM,UAAU,OACb,wBAAIA,UAAU,UAAd,wBACoBN,EAAOG,OAD3B,YAIA,kBAAC,EAAD,CACEH,OAAQA,EACRN,UAAW,IACXC,KAAM,EACNM,UAAW,EACXI,kBAAmB,W,GA9BXc,IAAMC,WCDxBE,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U","file":"static/js/main.08c010da.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './Carousel.scss';\n\nexport class Carousel extends React.Component {\n  state = {\n    currentPosition: 0,\n  };\n\n  scrollLeft = () => {\n    const { itemWidth, step } = this.props;\n\n    this.setState((prevState) => {\n      const prevPosition = prevState.currentPosition;\n\n      const expectedPosition = (\n        prevPosition + itemWidth * step\n      );\n\n      const currentPosition = expectedPosition > 0\n        ? 0\n        : expectedPosition;\n\n      return { currentPosition };\n    });\n  }\n\n  scrollRight = () => {\n    const { itemWidth, step, images, frameSize } = this.props;\n\n    this.setState((prevState) => {\n      const prevPosition = prevState.currentPosition;\n\n      const expectedPosition = (\n        prevPosition - itemWidth * step\n      );\n      const maxAllowableShift = (\n        -(itemWidth * images.length) + itemWidth * frameSize\n      );\n\n      const currentPosition = expectedPosition < maxAllowableShift\n        ? maxAllowableShift\n        : expectedPosition;\n\n      return { currentPosition };\n    });\n  }\n\n  render() {\n    const {\n      itemWidth,\n      images,\n      frameSize,\n      animationDuration,\n    } = this.props;\n\n    return (\n      <div\n        className=\"Carousel\"\n        style={{ width: `${itemWidth * frameSize}px` }}\n      >\n        <ul\n          className=\"Carousel__list\"\n          style={{\n            transform: `translateX(${this.state.currentPosition}px)`,\n            transition: `transform ${animationDuration}ms`,\n          }}\n        >\n          {\n            images.map((image, index) => (\n              <li\n                className=\"Carousel__item\"\n                key={image}\n                style={{ width: `${itemWidth}px` }}\n              >\n                <img\n                  src={image}\n                  alt={`Carousel item ${index}`}\n                />\n              </li>\n            ))\n          }\n        </ul>\n\n        <div className=\"Carousel__button-container\">\n          <button type=\"button\" onClick={this.scrollLeft}>Prev</button>\n          <button type=\"button\" onClick={this.scrollRight}>Next</button>\n        </div>\n      </div>\n    );\n  }\n}\n\nCarousel.propTypes = {\n  images: PropTypes.arrayOf(PropTypes.string).isRequired,\n  itemWidth: PropTypes.number.isRequired,\n  step: PropTypes.number.isRequired,\n  frameSize: PropTypes.number.isRequired,\n  animationDuration: PropTypes.number.isRequired,\n};\n","import React from 'react';\nimport './App.scss';\n\nimport { Carousel } from './components/Carousel/index';\n\nclass App extends React.Component {\n  state = {\n    images: [\n      './img/1.png',\n      './img/2.png',\n      './img/3.png',\n      './img/4.png',\n      './img/5.png',\n      './img/6.png',\n      './img/7.png',\n      './img/8.png',\n      './img/9.png',\n      './img/10.png',\n    ],\n  };\n\n  render() {\n    const { images } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1 className=\"header\">\n          {`Carousel with ${images.length} images`}\n        </h1>\n\n        <Carousel\n          images={images}\n          itemWidth={130}\n          step={3}\n          frameSize={3}\n          animationDuration={1000}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}